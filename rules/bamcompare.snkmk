import glob2


def get_BC_input(wildcards):
    all_bams = sorted(glob2.glob(
        f"{config['multiBamSummary']['bams_dir']}{config['fold_struct_deeptools']}*/"
        f"{config['fold_struct_deeptools']}*{config['multiBamSummary']['bam']}".format(id2=wildcards.id2)))

    return all_bams

rule multiBamSummary:
    input:
        get_BC_input
    # priority: 9

    output:
        f"{config['multiBamSummary']['outdir']}{config['fold_struct_deeptools']}.npz"
        
    # params:
    #     outfile_fmt=config['multiBamSummary']['out_format'] if not config['multiBamSummary']['out_format'].startswith('.') else config['multiBamSummary']['out_format'][1:]

    conda: "../envs/deeptools.yaml"

    resources:
        mem_mb=allocate_mem_MBS,
        time_min=allocate_time_MBS
       
    threads: 2

    # group: "PICARD_metrics"
     
    shell:
        """
        multiBamSummary bins --bamfiles {input} -o {output} -v
        """